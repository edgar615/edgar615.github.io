# 工作结果
:::danger
<font style="color:rgb(59, 67, 81);">研发过程的指标应该作为观测指标，真正的考核指标是业务在线上运营的故障和缺陷，以及研发人员对于需求响应、客户服务方面的满意度</font>

<font style="color:rgb(59, 67, 81);">绩绩效指标要和组织目标对齐，不要为了设置而设置。我们来看一个例子。某测试同学的绩效指标设定：1：所负责的模块无线上缺陷；2：辅导应届生进行功能测试；3：完成一次性能测试。</font>

<font style="color:rgb(59, 67, 81);">到考核季的前一个月，这位同学发现我的第三个指标(完成一次性能测试)还没做呢？于是急急忙忙去做了。当主管评估该同学绩效指标的时候，发现所有指标都完成了，包括性能测试的指标。但这个指标是不是当下最重要紧急的，甚至这个个人绩效指标跟项目目标、团队目标没有强关联。</font>

:::

:::danger
+ <font style="color:rgb(59, 67, 81);">任何面向不信任员工设计的指标最好都不要有，比如把工作时长和绩效挂钩。</font>
+ <font style="color:rgb(59, 67, 81);">先考察团队，再考察个人。通过一些指标来衡量整个技术团队的能力，比如效率方面的上线次数，lead time，质量方面的MTTR，回滚次数等等，都有考察。个人绩效方面，我们是OKR结合KPI来做。OKR⾃底向上，体现个人成长的需求，主要影响职级，不直接影响绩效，是⽬标管理工具；KPI⾃顶向下，根据团队的性质不同，侧重点不同，决定了绩效考核结果，同时也直接影响职级和年终奖</font>

:::

## 目标完成
### 目标：
1. **<font style="color:rgb(44, 44, 54);">任务按时完成率85%</font>**<font style="color:rgb(44, 44, 54);">：确保至少85%的任务能够按照预定时间完成，没有延期。</font>
2. **<font style="color:rgb(44, 44, 54);">及时沟通延期风险</font>**<font style="color:rgb(44, 44, 54);">：当预测到任务可能无法按时完成时，需立即向开发经理及主管报告，并寻求解决方案或调整工作计划。</font>
3. **<font style="color:rgb(44, 44, 54);">高效执行上级指派的工作</font>**<font style="color:rgb(44, 44, 54);">：有效管理个人时间和资源，确保所有分配的任务得以高质量地完成，同时保持适当的工作量水平。</font>
4. **<font style="color:rgb(44, 44, 54);">快速响应紧急情况</font>**<font style="color:rgb(44, 44, 54);">：能够及时处理突发性或高优先级的临时任务。</font>

### 评价标准
#### 优秀 
+ **<font style="color:rgb(44, 44, 54);">提前高质量完成</font>**<font style="color:rgb(44, 44, 54);">：多次提前完成任务，并保持高质量标准，无需返工。</font>
+ **<font style="color:rgb(44, 44, 54);">准时交付（含紧急任务）</font>**<font style="color:rgb(44, 44, 54);">：所有任务均按预定时间完成，没有延期，同时接受并按时完成紧急插入的任务</font>
+ **<font style="color:rgb(44, 44, 54);">显著超出预期</font>**<font style="color:rgb(44, 44, 54);">：至少两项工作成果超出预期目标，在效率、质量、创新或用户体验方面有显著提升，其中一项工作成果特别突出。</font>
+ **<font style="color:rgb(44, 44, 54);">卓越的领导与协作能力</font>**<font style="color:rgb(44, 44, 54);">：作为模块负责人，能够制定详细且可行的工作计划，高效分配任务并引领团队按时高质量完成。团队成员之间沟通顺畅，合作良好，项目成果得到高度认可</font>

#### 良好 
+ **<font style="color:rgb(44, 44, 54);">高质量完成</font>**<font style="color:rgb(44, 44, 54);">：能够按时完成任务，并保持高质量标准，无需返工。</font>
+ **<font style="color:rgb(44, 44, 54);">准时交付（常规任务）</font>**<font style="color:rgb(44, 44, 54);">：所有任务均按预定时间完成，没有延期。</font>
+ **<font style="color:rgb(44, 44, 54);">超出预期</font>**<font style="color:rgb(44, 44, 54);">：至少两项工作成果超出预期目标，在效率、质量、创新或用户体验方面有显著提升，工作成果得到了协作方或用户的积极反馈。</font>
+ **<font style="color:rgb(44, 44, 54);">有效的领导与协作能力</font>**<font style="color:rgb(44, 44, 54);">：作为模块负责人，能够有效管理团队，带领团队按时完成项目任务。团队成员之间的合作良好，虽然可能有一些小问题，但整体上能够顺利推进项目</font>

#### 合格 
+ **<font style="color:rgb(44, 44, 54);">基本完成</font>**<font style="color:rgb(44, 44, 54);">：能够独立按期完成工作，偶尔需要少量返工。</font>
+ **<font style="color:rgb(44, 44, 54);">轻微延期</font>**<font style="color:rgb(44, 44, 54);">：大部分任务按时完成，只有少数任务出现轻微延期（少于1个工作日），但不影响整体项目进度</font>
+ **<font style="color:rgb(44, 44, 54);">基本合格</font>**<font style="color:rgb(44, 44, 54);">：能够完成基本的工作要求，但质量、效率、协作方面存在一些不足，可能需要进行小范围的调整或者额外的支持和指导才能达到预期标准</font>
+ **<font style="color:rgb(44, 44, 54);">合格的领导与协作能力</font>**<font style="color:rgb(44, 44, 54);">：作为模块负责人，能够带领团队完成任务，但分工不够合理，有时会导致工作进度受到影响。团队成员之间的沟通和协作有待改进，偶尔会出现一些协调问题</font>

#### 需改进 
+ **<font style="color:rgb(44, 44, 54);">工作完成不佳</font>**<font style="color:rgb(44, 44, 54);">：勉强或困难完成工作，存在明显的不足和问题，多次需要大规模返工。</font>
+ **<font style="color:rgb(44, 44, 54);">严重延期</font>**<font style="color:rgb(44, 44, 54);">：多个任务出现严重的延期（3个工作日及以上），或频繁出现轻微延期（少于1个工作日），严重影响了项整体项目进度。</font>
+ **<font style="color:rgb(44, 44, 54);">低于预期：</font>**<font style="color:rgb(44, 44, 54);">工作质量未能达到预期的工作标准，存在明显的不足和问题，不主动上报潜在风险，导致团队工作受到影响</font>
+ **<font style="color:rgb(44, 44, 54);">管理不善</font>**<font style="color:rgb(44, 44, 54);">：作为模块负责人，分工不明确，导致团队成员职责不清，任务拖延严重。项目管理混乱，缺乏有效的沟通和协调，导致项目延期和质量问题频发</font>

### 加分标准
1. 完成重大产品目标，符合业务预期，可以视情况额外加分
2. 提前提测不能直接作为加分项，需要根据任务规模、工时评估合理性、缺陷情况、上线效果来考虑，可视情况加0.5分，最多加2此
3. 技术评估的时间和产品期望时间相差甚大（超出迭代周期3个工作日），通过合理拆解需求，调整优先级，优化实现方案，最终和产品达成一致，并成功上线，加1分，最多加两次
4. 按时完成临时插入任务>3个工作日且未操作任务延期，加1分
5. 作为SE配合产品经理参与硬件新项目对接，产品经理确认达到预期，加0.5~1分

### 扣分标准
1. 因三方问题引发的延期，产品经理同意后，可不作为扣分项
2. 如果产品目标没有达成，研发绩效视情况减分
3. 任务延期>3个工作日，扣2分
4. 任务延期>=1个工作日&<=3个工作日，扣1分
5. 任务延期<1个工作日，扣0.5分
6. 每季度至少完成两项复杂需求（个人工作量>=5个工作日），否则扣0.5分
7. 不主动上报风险，导致团队工作陷入被动，扣0.5分
8. 作为模块负责人时，模块分工不合理，任务管理混乱，扣1分



## 核心模块性能与稳定性
### 目标：
每个人的接口不同，需要明确考核哪些接口

1. **无重大安全事故**：确保系统在运行过程中没有发生任何导致数据泄露、服务中断或其他安全问题的重大事故。
2. **稳定应对突发流量**：在面临突发流量时，系统能够保持稳定运行，不出现性能瓶颈，并且没有引发客户投诉。
3. **核心业务SLA达到3个9**：核心业务运行稳定，<font style="color:rgb(44, 44, 54);">在发生故障时，能够在最短时间内恢复服务，确保对用户的影响降到最低</font>
4. **核心接口响应时间TP99<0.4秒**：<font style="color:rgb(44, 44, 54);">在响应时间超过0.4秒时，能够快速定位问题原因并制定改进计划</font>

### 评价标准
#### 优秀
+ **核心业务SLA达到4个9**
+ **核心接口响应时间TP99<0.2秒**
+ **系统在突发流量下表现稳定**：<font style="color:rgb(44, 44, 54);">在面对突发流量时，系统表现出色，没有出现性能问题，确保了服务的连续性和稳定性</font>。
+ 有提升系统性能和稳定性的案例并有明确结果落地，有效提升了系统性能和稳定性

#### 良好
+ **核心业务SLA达到4个9**
+ **核心接口TP99响应时间<0.3秒，TP95响应时间<0.2秒**
+ **系统在突发流量下表现稳定**：<font style="color:rgb(44, 44, 54);">在面对突发流量时，系统表现出色，没有出现性能问题，确保了服务的连续性和稳定性</font>。
+ 有提升系统性能和稳定性的有效建议，并且这些建议得到了认可。

#### 合格
+ **核心业务SLA达到3个9**
+ **核心接口TP99响应时间<0.4秒，TP95响应时间<0.3秒**
+ **突发流量对系统影响较小：**<font style="color:rgb(44, 44, 54);">面对突发流量导致的少量性能问题，能够及时处理并确保未对核心业务造成较大影响，且未产生客户投诉。</font>

#### 需改进
+ **核心业务SLA未达到3个9**
+ **核心接口超过0.4秒接口占比>1%，超过0.3秒接口占比5%**
+ **突发流量影响系统不稳定：**在面对突发流量时，系统出现了较多性能问题，对业务造成了较大影响。

### 加分标准
1. 如果日活或者数据规模未增长，加分项仅在某个季度加一次：如果日活或者数据规模较上季度发生明显增长，可以重复加一次
2. 只有有明显规模的接口才考虑响应时间
3. 有提升系统性能和稳定性的案例并有明确结果的视案例加0.5-2分
4. 有提升系统性能和稳定性的有效建议加0.25-0.5分
5. 调用多的模块整季度无事故可以适当加分0.5一2分
6. 接口响应时间TP99<=0.0.5秒，SLA>=99.9%,加2分
7. 接口响应时间TP99<=0.1秒，SLA>=99.9%,加1.5分
8. 接口响应时间TP99<=0.2秒，SLA>=99.9%,加1分
9. 接口响应时间TP99<=0.3秒，SLA>=99.9%,加0.5分
10. 接口性能指标/稳定性指标和上季度相比有显普提升，加0.5~1分
11. 第三方故障时，系统做到了很好的容错，加0.5-1分

### 扣分标准
1. P0级故障每半小时扣5分（不足半小时按半小时算）
2. P1级故障每半小时扣3分（不足半小时按半小时算）
3. P2级故障每一小时扣1分（不足1小时按1小时算）
4. 面对突发流量接口发送抖动，引起系统异常，没有客诉扣0.25分，有客诉视情况扣0.5~1分
5. 接口响应时间大于0.5秒占比>1%，扣0.25分，接口响应时间大于0.6秒占比>1%，扣0.5分，接口响应时间大于1秒占比>1%，扣1分
6. 接口SLA<99.9%，扣0.5分，接口SLA<99%，扣1分（不与事故重复扣分）
7. 第三方系统故障时，系统未做好容错，扣0.5~1分

## 生产缺陷
### 目标
1. **上线当天验收一次性通过率100%：**所有功能在首次验收时均符合要求
2. **上线过程平稳：**上线过程中未对业务造成任何中断或影响，没有因为自身原因导致的发布回滚
3. **零严重缺陷：**负责模块无P1和P0缺陷
4. **生产问题零重开：**<font style="color:rgb(44, 44, 54);">生产环境中发现的问题</font>reopen次数=0

### 评价标准
#### 优秀
+ **上线当天验收一次性通过率100%：**所有功能在首次验收时均符合要求
+ **上线过程平稳：**严格按照流程执行，无遗漏步骤，单次一次性发布成功 ，没有因为配置、代码问题引起的紧急发布，上线过程中未对业务造成任何中断或影响
+ **零缺陷：**负责模块无缺陷
+ **生产问题零重开：**<font style="color:rgb(44, 44, 54);">生产环境中发现的问题</font>reopen次数=0

#### 良好
+ **上线当天验收一次性通过率100%：**所有功能在首次验收时均符合要求
+ **上线过程平稳：**严格按照流程执行，无遗漏步骤，单次一次性发布成功 ，没有因为配置、代码问题引起的紧急发布，上线过程中未对业务造成任何中断或影响
+ **零严重缺陷：**负责模块无P1和P0缺陷，Dl<1
+ **生产问题零重开：**<font style="color:rgb(44, 44, 54);">生产环境中发现的问题</font>reopen次数=0

#### 合格
+ **上线当天验收存在少量缺陷：**缺陷Dl<=1且reopen次数=0
+ **上线过程存在少量抖动：**上线步骤未出现遗漏，发布过程引起少显抖动，未导致业务不可用，未带来客诉
+ **少量严重缺陷：**上线后负责模块线上缺陷Dl<=2且
+ **生产问题零重开：**<font style="color:rgb(44, 44, 54);">生产环境中发现的问题</font>reopen次数=0

#### 需改进
+ **上线当天验收存在较多缺陷：**缺陷DI>=2,或者存在reopen次数>1
+ **上线过程引发系统不稳定：**没有发布单，直接上线，上线遗漏关键步骤，影响发布流程，发布过程中引发系统不稳定，带来客诉
+ **较多生产缺陷：**上线后负责模块线上缺陷Dl>=3
+ **生产问题重开：**<font style="color:rgb(44, 44, 54);">生产环境中发现的问题</font>reopen次数>0

### 加分标准
1. 主动发现线上缺陷（不是客诉），反馈到产品测试，提供方案并跟进解决，加0.25分。是否考虑缺陷等级
2. 复杂需求（个人工作显>=5工作日）单次一次性发布成功，系统无缺陷，每次加0.25分
3. 日活多的模块整季度无客诉可适当加分(0.5~1分)

### 扣分标准
1. 没有发布单直接上线的扣2分
2. 发布过程中引发系统不稳定带来客诉，每次扣0.5分
3. 由于自身原因导致的回滚，每次扣0.5分
4. 单次没有发布成功，每次重发扣0.25分
5. 由于自己原因导致的紧急发布每次扣0.25分
6. 所负责模块被他人发现日志存在大范围系统异常，同一个业务扣0.25分，自己主动发现不扣分
7. 生产缺陷（包括上线当天）根据影响范围视情况每个扣0.25~1分，对于某些高频疑难问题，再经过测试负责人确认后可以不作为扣分项

# 工作过程
## 设计与实现
目标

1. 复杂需求（个人开发时间>=5个工作日）功能开发，有详细方案设计能够描述清楚整个业务逻辑和流程，包含性能、容量、容错等非功能性设计，评审无明显重大问题
2. 需求变更后，或者设计变更前及时组织评审，保证代码和设计一致
3. 代码符合规范，无明显问题
4. 设计方案和代码实现充分考虑性能、可扩展性、可维护性、可测试性、安全性等非功能设计

评价标准

1. 优秀(10)
    1. 主导完成story设计>=3，至少包括2篇复杂模块设计文档，设计文档无缺失项，包含性能、容量、容错等非功能性设计,无明显逻辑问题，没有造成返工
    2. 代码严格遵守规范
    3. 能够通过总结和沉淀，提供可复用代码，提升团队开发效率
2. 良好(8~9)：
    1. 主导完成stoy设计>=3，包括1篇复杂模块设计文档，设计文档无缺失项，包含性能、容显、容错等非功能性设计内容；无明显逻辑问题，没有造成实现返工
    2. 代码严格遵守规范
    3. 能够通过总结和沉淀，提供可复用代码，提升团队开发效率
3. 合格(7)
    1. 主导完成storyi设计>=2，设计文档无明显缺失项，包含性能、容量、容错等非功能性设计，有少量逻辑问题，实现过程出现少显因为设计问题带来发返工，但未引起任务延期
    2. 代码无明显不符合规范
4. 需改进(0-6)：
    1. 复杂零求（个人开发时间>=5个工作日）的功能开发，没有设计方案或者没有进行设计评审就直接进入开发
    2. 设计文档质显较差，存在明显缺项，缺少性能、容量、容错等非功能性设计
    3. 实现过程中多次因为设计问题带来的返工
    4. 代码存在严重的不符合规范的现象

加分标准

1. 设计方案提前布局，未将来的需求做好规划，后面用到这个规划并节省了成本，提高了效率，加0.5分
2. 设计方案一次性通过（无重大问题）：关键流程设计清晰、包含性能、容量、容错等非功能性设计，在设计迭代过程中未出现返工，加0.5分
3. 通过总结和沉淀、提供可复用代码，提升了团队开发效率，加0.5分

扣分标准

1. 复孙需求（个人开发时间>=5工作日）未输出设计方案，未召开评审会，每次扣1分
2. 因为设计方案未考虑全部或者未和协作方对其，导致研发返工>0.5工作日，扣0.5分，如果是协作方在参加评审后，后面因自身实现方案引起的变更不加分
3. 设计方案缺少性能、容量、容错等非功能性设计，扣1分

## 缺陷数量与修复率
### 目标
1. **提测时showcase一次性通过率100%**：按时提测并确保在提测时的功能展示（showcase）能够一次性通过。
2. **一日内缺陷解决率100%：**系统测试阶段，在下午5点前发现的缺陷能够在当天解决。
3. **测试缺陷零重开：**系统测试阶段reopen缺陷个数=0。
4. **UAT零缺陷**：UAT测试阶段无缺陷
5. **积极参与冒烟测试**：主动参与冒烟测试，确保基本功能正常。

### 评价标准
#### 优秀 
+ **提测时showcase一次性通过率>=100%**：<font style="color:rgb(44, 44, 54);">提测前进行了充分的内部测试和验证，</font>按时提测且提测时的一次通过率=100%，没有任何缺陷。
+ **一日内缺陷解决率100%：**系统测试阶段，在下午5点前发现的缺陷能够在当天解决。
+ **测试缺陷零重开：**系统测试阶段reopen缺陷个数=0。
+ **UAT环境零缺陷**：UAT测试阶段无缺陷
+ **积极参与冒烟测试**：主动参与冒烟测试，确保基本功能正常。

**良好 **

+ **提测时showcase一次性通过率>=95%**：<font style="color:rgb(44, 44, 54);">提测前进行了内部测试和验证，</font>按时提测且提测时的一次通过率>=95%，DI<=1，没有阻塞流程，不影响整体通过
+ **一日内缺陷解决率100%：**系统测试阶段，在下午5点前发现的缺陷能够在当天解决。
+ **测试缺陷零重开：**系统测试阶段reopen缺陷个数=0。
+ **UAT环境零缺陷**：UAT测试阶段无缺陷
+ **主动参加冒烟测试**：积极主动地参与冒烟测试，确保基本功能正常。
+ 

**合格 **

+ **提测时showcase一次性通过率>=90%**：<font style="color:rgb(44, 44, 54);">提测前进行了内部测试和验证，</font>按时提测且且提测时的一次通过率>=90%，DI<=2，没有阻塞流程，不影响整体通过
+ **一日内未解决缺陷数<=1：**系统测试阶段，在下午5点前发现的缺陷只有一个未在当天解决，且这个缺陷并未阻塞测试。
+ **测试缺陷零重开：**系统测试阶段reopen缺陷个数=0。
+ **UAT环境有少量缺陷**：UAT测试阶段缺陷DI<=1
+ **主动参加冒烟测试**：积极主动地参与冒烟测试，确保基本功能正常。

**需改进 **

+ **提测时showcase一次性通过率<90%**：未按时提测，或者提测前<font style="color:rgb(44, 44, 54);">能未经过充分的内部测试和验证，存在大量潜在问题，</font>一次通过率<90%，DI>3，或者存在阻塞流程，影响整体通过
+ **提测未通过：**经过多次修改后，提测一次通过率仍然<90%，影响测试进度
+ **一日内未解决缺陷数>1：**系统测试阶段，在下午5点前发现的缺陷有多个未在当天解决，或者有未解决的缺陷阻塞了测试。
+ **多个reopen缺陷：**系统测试阶段reopen缺陷数量>=2。
+ **测试阶段出现阻塞流程问题**：测试阶段出现阻塞流程的问题，导致测试无法正常进行。
+ **不主动参加冒烟测试**：不主动参与冒烟测试，对基本功能的验证不够重视。

### 加分标准
1. 提测showcase-一次性通过加0.25分，同一迭代最多2次
2. 复杂任务（工时>=5个工作日）无P2级以上缺陷，加0.5分，无P1级以上缺陷，加0.25分
3. 提供提升质量的可行性建议，经测试负费人确认，加0.5分

### 扣分标准
经测试负责人确认的三方问题可以不作为扣分项

1. 缺陷日清阶段，缺陷未达到日清，P0缺陷扣1分，P1缺陷扣0.5分，其他扣0.25分，相同缺陷不重复扣分，reopen扣分累加
2. 提测showcase出现P0级缺陷，扣1分，出现P1缺陷扣0.5分，其他缺陷扣0.25分，相同缺陷不重复扣分，reopen扣分累加
3. 测试阶段缺陷reopen，P0缺陷扣1分，P1缺陷扣0.5分，其他扣0.25分，多次reopen扣分累加
4. 所负责模块未参与冒烟测试，扣0.5分
5. 测试阶段出现阻塞流程问题，导致测试无法正常进行，测试等待>0.5工作日，扣0.5~1分
6. 不配合测试团队的工作，影响测试进度，每次扣0.5-1分。     
7. 在缺陷管理和修复过程中缺乏主动性，不愿意提出建议或参与讨论，每次扣0.5分    

## 评审参与度与质量
### 目标
1. **积极参与需求评审：**<font style="color:rgb(44, 44, 54);">积极参加需求评审会议，提供有价值的反馈和建议，确保需求文档清晰、完整且无歧义，符合业务和技术要求，降低团队成员对需求理解的不一致性。</font>
2. **积极参与用例评审**：积极参加测试用例评审会议，提出有价值<font style="color:rgb(44, 44, 54);">的反馈</font>和建议，<font style="color:rgb(44, 44, 54);">确保测试用例覆盖全面且有效，能够覆盖所有功能点和边界条件</font>。
3. **积极参与设计评审**：积极参加设计评审会议，从多个维度检视技术方案，提出有价值<font style="color:rgb(44, 44, 54);">的反馈</font>和建议，确保方案具备可行性，符合系统对于可扩展性、可维护性、可测试性和安全性等非功能设计要求。
4. **积极参与代码评审**：积极参加代码评审会议，提出有价值<font style="color:rgb(44, 44, 54);">的反馈</font>和建议，确保代码实现符合团队代码规范和最佳实践，代码逻辑清晰无明显缺陷。

### 评价标准
#### 优秀 
+ **需求评审参与度>=90%且多次提出高质量建议**：能够正确理解需求文档，独立分析需求，多次提出高价值的评审意见，能够从技术视角向产品提出反向需求并落地，没有因为评审不细致导致编码和测试阶段出现需求变更
+ **用例评审参与度>=90%且多次提出高质量建议：**能够独立分析测试目标，能够提炼高价值异常和关联场景，多次提出高价值的评审意见，没有因为评审不细致导致测试阶段出现用例变更或者实现返工
+ **设计评审参与度≥90%且多次提出高质量建议：**能够准确把握设计方案的核心思想，并对非功能性设计进行深入剖析，多次提出高价值的评审意见，没有因为未认真评估影响范围，在实现或测试过程中引发对方设计变更或者返工
+ **代码评审参与度≥90%且多次提出高质量建议：**能够准确把握代码实现的核心思想，并对非功能性设计进行深入剖析，多次提出高价值的评审意见，没有因为未认真评估影响范围，在实现或测试过程中引发对方设计变更或者返工

#### 良好
+ **需求评审参与度>=70%且有高质量建议：**能够正确理解需求文档，独立分析需求，提出高价值的评审意见，没有因为评亩不细致导致编码和测试阶段出现需求变更
+ **用例评审参与度>=70%且有高质量建议：**能够独立分析测试目标，提出高价值的评审意见，没有因为评审不细致导致测试阶段出现用例变更或者实现返工
+ **设计评审参与度>=70%且有高质量建议：**能够准确把握设计方案的核心思想，提出高价值的评审意见，没有因为未认真评估影响范围，在实现或测试过程中引发对方设计变更或者返工
+ **代码评审参与度>=70%且有高质量建议：**能够准确把握代码实现的核心思想，提出高价值的评审意见，没有因为未认真评估影响范围，在实现或测试过程中引发对方设计变更或者返工

#### 合格
+ **需求评审参与度>=50%：**能够正确理解需求文档，多次提出合理的评亩意见，有少量未认真评估影响范围，导致需求或用例在实现或测试阶段返工
+ **用例评审参与度>=50%：**能够依据需求和设计实现，多次提出合理的评审意见，有少量未认真评估影响范围，导致需求或用例在实现或测试阶段返工
+ **设计评审参与度>=50%：**能够对设计方案进行一定程度的审查，多次提出合理的评审意见，有少显因为未认真评估影响范围，在实现或测试过程中引发对方设计变更或者返工
+ **代码评审参与度>=50%：**能够对代码实现进行一定程度的审查，多次提出合理的评审意见，有少量因为未认真评估影响范围，在实现或测试过程中引发对方设计变更或者返工

#### 需改进
+ **需求评审参与度<50%：**很少提出有价值的评审意见，多次因为未认真评估影响范围，在实现或测试过程中引发对方变更或返工
+ **用例评审参与度<50%：**很少提出有价值的评审意见，多次因为未认真评估影响范围，在测试过程中引发对方变更或返工
+ **设计评审参与度<50%：**很少提出有价值的评审意见，多次因为未认真评估影响范围，在实现或测试过程中引发对方设计变更或返工
+ **代码评审参与度<50%：**很少提出有价值的评审意见，多次因为未认真评估影响范围，在实现或测试过程中引发对方返工

### 加分标准
1. 积极参加各项评审，提出高价值评审意见，加0.25分，每次评审最多加2次
2. 从技术侧输出对需求和业务的反馈，给出解决方案并落地，加0.25分
3. 复杂需求（个人开发时间大于3个工作日），在需求评审阶段整理细节，给出了有效的评审意见，在当次选代开发过程中，没有因为评审不细致导致需求变更的，加0.25分
4. 对不熟悉的业务进行反讲，没有因业务理解不一致导致的缺陷，加0.25分

### 扣分标准
1. 未参加一次评审，此项得0分
2. 需求评审参与度<50%，扣1分
3. 用例评审参与度<50%，扣1分
4. 设计评审参与度<50%，扣1分
5. 代码评审参与度<50%，扣1分
6. 在编码和测试阶段（不是设计阶段）发现因为评审不细致导致需求出现流程变更的，扣0.5分
7. 在测试阶段发现测试用例和设计实现不一致，引发用例修改的，扣0.5分
8. 参加了设计评审，但未认真评估影响，导致实现过程中发现需要对方设计或者实现进行调整的，扣0.5分

## <font style="color:rgb(44, 44, 54);">主动监控与优化</font>
#### 目标
1. **定期巡检慢SQL和错误日志**：主动排查线上日志和慢SQL，及时发现并处理潜在问题。
2. **积极参与用户反馈处理**：积极参与用户反馈的收集和处理，确保用户声音被重视并得到及时响应。
3. **定期自体验系统**：主动以用户的身份体验系统，发现并记录系统的不足之处，提出具体的优化建议，并跟踪实施情况。
4. **及时响应风险预警：**<font style="color:rgb(44, 44, 54);">在收到运维部门发出的风险预警后，能够在5个工作日内及时解决问题并消除潜在风险</font>

#### 评价标准
#### 优秀 
+ **主动检查错误日志和慢SQL**：每周主动检查错误日志和慢SQL，发现潜在问题后能够迅速响应并处理，减少线上问题的发生，并<font style="color:rgb(44, 44, 54);">沉淀相关经验，避免类似问题再次发生。</font>
+ **<font style="color:rgb(44, 44, 54);">主动收集和处理用户反馈：</font>**<font style="color:rgb(44, 44, 54);">能够主动收集用户反馈，对用户反馈能迅速响应并处理，并跟踪问题解决情况，用户之声问题（包括设备问题）实现日清。</font>
+ **主动自体验系统并提出优化建议**：每月至少一次完整地使用系统，覆盖主要功能和场景，针对发现的问题，提出具体的优化建议，并跟踪实施情况。
+ **主动响应和解决运维风险，运维反馈问题无遗留：**运维反馈的问题均在5个工作日内得到解决，没有遗留问题。<font style="color:rgb(44, 44, 54);">与运维团队保持良好的沟通，确保解决方案的有效性和可行性。</font>

#### 良好 
+ **主动检查错误日志和慢SQL：**每周主动检查错误日志和慢SQL（允许偶尔遗漏），发现潜在问题后能够迅速响应并处理，减少线上问题的发生，并<font style="color:rgb(44, 44, 54);">沉淀相关经验，避免类似问题再次发生。</font>
+ **<font style="color:rgb(44, 44, 54);">主动收集和处理用户反馈：</font>**<font style="color:rgb(44, 44, 54);">能够主动收集用户反馈（允许偶尔遗漏），对用户反馈能迅速响应并处理，并跟踪问题解决情况，用户之声问题（包括设备问题）实现日清。</font>
+ **主动自体验系统并提出优化建议**：季度至少两次次完整地使用系统，覆盖主要功能和场景，针对发现的问题，提出具体的优化建议。
+ **及时响应和解决运维风险：**运维反馈的大部分问题均在5个工作日内得到解决，存在少量遗留问题，但不影响系统稳定性和用户体验。<font style="color:rgb(44, 44, 54);">对于遗留问题能够制定合理的修复计划，确保运维问题最终得到解决</font>

**合格 **

+ **检查错误日志和慢SQL：**能按照要求检查错误日志和慢SQL，但有时候需要监督和提醒，发现潜在问题后能够响应并处理，但响应速度和解决问题的能力有待提高。
+ **<font style="color:rgb(44, 44, 54);">主动处理用户反馈：</font>**<font style="color:rgb(44, 44, 54);">对用户反馈能迅速响应并处理，并跟踪问题解决情况，但响应速度和解决问题的能力有待提高。</font>
+ **主动自体验系统并提出优化建议**：每季度至少一次完整地使用系统，覆盖主要功能和场景，针对发现的问题，提出具体的优化建议。
+ **及时响应和解决运维风险：**运维反馈的大部分问题均在5个工作日内得到解决，存在少量遗留问题，但不影响系统稳定性和用户体验。

**需改进 **

+ **不重视错误日志和慢SQL：**<font style="color:rgb(44, 44, 54);">未能定期主动检查或者不能及时响应和处理线上错误日志和慢SQL，导致潜在问题未能及时发现和处理。</font>
+ **<font style="color:rgb(44, 44, 54);">不主动处理用户反馈：</font>**<font style="color:rgb(44, 44, 54);">不能积极参与用户反馈的收集和处理，导致用户声音未被重视，问题未能得到及时响应和解决</font>
+ **不重视自体验：**没有以用户的身份体验系统，没有提出任何优化建议
+ **运维问题响应迟缓：**存在大量运维反馈的问题未得到解决，影响系统稳定性和用户体验

### 加分标准
1. 主动发现并解决潜在的线上问题，防止其发生
2. 编写详细的线上问题处理流程和技术文档，帮助其他团队成员快速解决问题
3. 主动开展用户调研，收集更多用户反馈，为产品优化提供依据

### 扣分标准
1. 同一问题反复出现且未得到有效解决，每次扣1-2分。
2. 对线上问题或用户反馈响应迟缓，每次扣1分。
3. 未能在规定时间内完成线上问题处理任务，每次扣1-2分。
4. 长时间未进行系统自体验，每次扣1-2分
5. 对提出的优化建议跟进不到位，导致问题长期未解决
6. 运维发出的风险预警超过5个工作日未解决后，每5个工作日（不足5个工作日按5个工作日算）扣0.25分，经运维确认可以延期解决的不作为扣分项，若该预警未解决进而引发事故，除按故障扣分外，额外扣1分

# 组织贡献
## 团队文化
### 目标
1. **服从工作安排**：积极接受并适应工作任务的变化，展现灵活性。
2. **积极参与协作任务**：在部门内或跨部门多人协作时，能够主动参与、积极配合，并且没有收到负面反馈。
3. **帮助同事完成任务**：愿意并且能够有效地协助其他同事解决问题或完成任务。
4. **促进正向工作氛围**：通过正面行为（如表扬、支持）来鼓励同事，营造积极的工作环境。

### 评价标准
#### 优秀
+ 具备高度的工作主动性和责任心，不仅能够高效地完成个人任务，还能预见潜在问题并提前采取措施
+ 能够在团队协作中担任主心骨，主动以协作、共同进步的心态对待自己和同事，积极资源共享，消除信息差，
+ 积极倾听其他成员的意见，协助其他同事完成目标，得到其他同事好评
+ 乐于承担额外责任，能承担本职工作外的任务，及时积极跟进解决问题

#### 良好
+ 具备良好的工作主动性和责任心，能够较好地履行工作职责，对于紧急情况也能做出响应
+ 有一定的团队协作意识和能力
+ 能够主动协助其他人解决问题，得到其他同事认可
+ 偶尔会承担一些非正式指派的责任，显示出一定的积极性

#### 合格
+ 工作主动性与责任心一股，能认真投入本职工作，且符合工作要求，但较少表现出自发性
+ 能够与团队其他成员合作，提供的协助可以满足同事的工作要求，经提醒后能做到资源共享，未产生冲突，未有其他同事投诉

#### 需改进
+ 工作主动性与责任心较差，不能很好投入工作，存在拖延、推卸等情况
+ 基本上以自顾自"的心态对待自己和同事，对于同事提出的问题不能较好地回应
+ 很少主动去帮助别人，甚至有时会拒绝他人的求助

### 加分标准
1. 有主动帮助其他成员完成任务加0.25（同一成员同一任务只最多加2次)
2. 得到好评，加0.25分，每个迭代来自同一个人的最多一次，每个季度来自同一个人的好评最多2次
3. 在没有被明确要求的情况下，主动承担额外的责任或任务，加0.25
4. 积极参与并推动重要项目的成功完成，加0.25

### 扣分标准
1. 有负面反馈的每次扣0.25~1分
2. 对分配的任务缺乏积极性，有拖延现象扣0.25~1分

## 知识沉淀与分享
#### 目标
1. **主动分享或沉淀业务和技术中有价值的经验方案**：在团队内进行分享，包括但不限于业务流程、技术实现、项目经验等。
2. **积极参与他人发起的技术分享**：积极参加分享会，还能够提出建设性的见解和建议。

#### 评价标准
**优秀 (5)**

+ a. **高参与度**：技术分享活动的参与度达到或超过50%
+ b. **积极贡献**：在他人发起的技术分享中，不仅积极参与讨论，还能提出有价值的见解或建议。
+ c. **主动分享**：至少有一次主动分享自己的工作成果、新技术或经验，并且分享内容对团队成员有实际帮助。
+ d. **高质量分享**：至少有一篇高质量的技术分享文档或演讲，该分享应包含深入的分析、实用的案例或创新的观点，并得到团队成员的认可。

**良好 (4)**

+ a. **高参与度**：技术分享活动的参与度达到或超过50%。
+ b. **积极贡献**：在他人发起的技术分享中，能够积极参与讨论，并提出自己的见解。
+ c. **主动分享**：至少有一次主动分享自己的工作成果或新技术，并且分享内容对团队成员有一定的参考价值。

**合格 (3)**

+ a. **高参与度**：技术分享活动的参与度达到或超过50%。
+ b. **积极贡献**：在他人发起的技术分享中，能够积极参与讨论，并提出自己的见解。
+ c. **总结与输出**：能够对自己的工作成果、经验和学习到的新技术进行总结，并输出成文档或报告形式，供团队内部参考。

**需改进 (0-2)**

+ a. **低参与度**：技术分享活动的参与度低于50%。
+ b. **缺乏主动性**：未能对自己的工作成果或经验进行总结并输出文档。
+ c. **无贡献**：在他人发起的技术分享中，很少或没有提出自己的见解和建议。
+ d. **未主动分享**：从未主动分享自己的工作成果或新技术。

### 加分标准
1. 得到大家认可的高质量分享加1分
2. 进行一次分享加1分

### 扣分标准
1. 未参加技术分享会，此项得0分
2. 技术分享参与度<50%，得1分
3. 未对自己的工作成果，经验进行总结并输出文档，扣1分

## 人才培养
### 目标
1. **定期对成员进行业务指导**：明确个人目标，凝聚团队共识，提升团队整体能力。
2. **定期复盘关键里程碑**：收集成员的反馈，及时解决问题，确保项目顺利推进。
3. **制定新人成长计划**：指导新人通过试用期考核，并帮助其快速融入团队。

### 评价标准
#### 优秀 
+ 能为成员制定合理的培养计划，并持续关注成员的成长和发展，不断提升团队成员的工作积极性和工作能力
+ 能够定期与成员沟通，收集反馈，并根据反馈调整培养计划，确保成员的成长路径符合其职业发展需求
+ 所带成员能够作为模块负费人承担重要任务，并能向其他同事分享带人经验，效果显著，成员的能力得到明显提升，对团队和组织有积极贡献

#### 良好 
+ 能够为团队成员制定合理的培养计划，并持续关注成员的成长和发展，不断提升团队成员的工作积极性和工作能力
+ 能够定期与成员沟通，收集反馈，并根据反馈调整培养计划，确保成员的成长路径符合其职业发展需求
+ 所带成员能够作为模块负责人承担重要任务，表现出较强的工作能力和责任心。

#### 合格 
+ 能够为团队成员指定基本的培养计划，确保成员达到岗位的基本要求。
+ 能够带领成员完成日常的业务开发和方案设计任务，保证工作的正常进行。
+ 能够与成员保持常规的沟通，了解成员的工作状态和需求，但缺乏系统性的跟进和反馈机制。

#### 需改进 
+ 没有为团队成员制定合理的培养计划，导致成员的能力没有得到有效的发挥和提升。
+ 与成员的沟通不充分，未能及时发现和解决问题，影响了成员的工作积极性和团队的整体表现。

### 加分标准
1. 担任新员工或初级员工的正式导师，帮助他们适应公司文化和工作环境，每次加0.5分
2. 所带成员能够作为模块负责人承担重要任务,加0.5分
3. 为所带成员制定合理的培养计划：如果没有及时跟进产出并解决问题，加0.5分：如果及时跟进产出并解决问题，加1分

### 扣分标准
1. 因为培养不当或管理问题，有负面反馈的每次扣0.25~1分
2. 与团队成员沟通不畅，导致成员感到迷茫或不满，每次扣0.25分



# 加分项
## 工作结果
1. 核心功能面对突发流量未发生性能抖动
2. 核心模块无客诉，无资损
3. 插入紧急任务，依然能确保原计划工作按时完成
4. 完成自我突破和成长
5. 开发时间2周及以上评估时间与上线时间相差10%以内的项目，保证按期上线
6. 产品迭代上线计划或时间倒排项目与技术估时相差20%以上的项目，通过项目组制定的加
7. 班计划，按时保质完成产品上线或项目交付

## 组织建设
1. 对历史项目提出改造方案，在不影响业务迭代的情况下，完成技术改造
2. 总结沉淀相关经验或服用代码，获得团队成员认可，有效提升开发效率
3. 在流程上提出创新方案，有效提高协作和研发效率
4. 针对链路问题，主动成立专项小组进行治理并达到目标
5. 主动发现并上报线上问题，规避线上风险
6. 技术难点攻关



# 扣分项
## 工作结果
1. 代码、复杂SQL、误操作等执行不到位引起的P0,P1事故
2. 同一模块发生P2及以上事故>=2
3. 负责模块发生P2及以上事故>=3
4. 上线当天同一模块缺陷D>=4
5. 上线当天负责模块缺陷DI>=6
6. 上线后同一模块缺陷D>=4
7. 超时接口>=3%，超过06秒接口>=10%，且无下降趋势，当季最后一月指标纳入下季度考核，直连设备，内网系统不考虑
8. 上线后负责模块缺陷D>=6
9. 季度目标未达成
10. 上线遗漏关键步骤，影响发布进程



## 工作过程
1. 提测时遗漏需求
2. 对测试发现的缺陷不重视，未及时反馈，导致缺陷发布到线上
3. 同一缺陷reopen次数>=2
4. 缺陷reopen次数>=5
5. 未能完成项目任务，或者完成任务的质量和效率极低，对团队造成了较大的影响。
6. 业务迭代估时存在偏差，出现2次20%以上的偏差



